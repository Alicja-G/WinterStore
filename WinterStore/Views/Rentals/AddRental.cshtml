@model dynamic
@{
    ViewBag.Title = "New Rental Form";
}

<div class="container" id="equipmentcontainer">
    <h2 id="headerfornewrentalform">New Rental Form</h2>

    <form id="newRental">


        <div class="form-group">
            <label id="labelforcustomeraddrental">Customer</label>
            <div class="tt-container">
                <input id="customer" name="customer" data-rule-validCustomer="false" required type="text" value="" class="form-control" />
            </div>
        </div>

        <div class="form-group">
            <label id="labelforequipmentaddrental">Equipment</label>
            <div class="tt-container">
                <input id="equ" name="equ" data-rule-atLeastOneEquipment="false" type="text" value="" class="form-control" />
            </div>
        </div>

        <div class="row">
            <div class="col-md-4 col-sm-4">
                <ul id="equipment" class="list-group"></ul>
            </div>
        </div>

        <div class="row">
            <div class="col-md-4 col-sm-4">
                <button class="btn btn-primary">Submit</button>
            </div>



            <div class="col-md-4 col-sm-4">
                <p>
                    @Html.ActionLink("Back to the list", "Index", "Rentals", null, new { @class = "btn btn-primary" })
                </p>
            </div>

        </div>
    </form>
    </div>
  
  
    @section scripts
{
        @Scripts.Render("~/bundles/jqueryval")
        <script>
            $(document).ready(function () {

                var vm = {
                   
                    equipmentIds: []
                };

                var customers = new Bloodhound({
                    datumTokenizer: Bloodhound.tokenizers.obj.whitespace('customerName'),
                    queryTokenizer: Bloodhound.tokenizers.whitespace,
                    remote: {
                        url: '/api/customers?query=%QUERY',
                        wildcard: '%QUERY'
                    }
                });

                $('#customer').typeahead({
                    minLength: 3,
                    highlight: true
                }, {
                    name: 'customers',
                    display: 'customerName',
                    source: customers
                }).on("typeahead:select", function (e, customer) {
                    vm.customerId = customer.customerId;
                });

                var equipment = new Bloodhound({
                    datumTokenizer: Bloodhound.tokenizers.obj.whitespace('equipmentName'),
                    queryTokenizer: Bloodhound.tokenizers.whitespace,
                    remote: {
                        url: '/api/equipment?query=%QUERY',
                        wildcard: '%QUERY'
                    }
                });

                $('#equ').typeahead({
                    minLength: 3,
                    highlight: true
                }, {
                    name: 'equipment',
                    display: 'equipmentName',
                    source: equipment
                }).on("typeahead:select", function (e, equipment) {
                    $("#equipment").append("<li class='list-group-item'>" + equipment.equipmentName + "</li>");

                    $("#equ").typeahead("val", "");

                    vm.equipmentIds.push(equipment.id);
                });


                $.validator.addMethod("validCustomer", function () {
                    return vm.customerId && vm.customerId !== 0;
                }, "Please select a valid customer.");

                $.validator.addMethod("atLeastOneEquipment", function () {
                    return vm.equipmentIds.length > 0;
                }, "Please select at least one equipment.");

                var validator = $("#newRental").validate({
                    submitHandler: function () {
                        $.ajax({
                            url: "/api/newRentals",
                            method: "post",
                            data: vm
                        })
                        .done(function () {
                            toastr.success("Rentals successfully recorded.");

                            $("#customer").typeahead("val", "");
                            $("#equ").typeahead("val", "");
                            $("#equipment").empty();

                            vm = { equipmentIds: [] };

                            validator.resetForm();
                        })
                        .fail(function () {
                            toastr.error("Something unexpected happened.");
                        });

                        return false;
                    }
                });
            });

        </script>
    }

